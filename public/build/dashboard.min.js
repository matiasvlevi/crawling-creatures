/*!
 genetic-creatures v1.0.0 by Matias Vazquez-Levi 
 Build date: 2022-08-29
 License: MIT
*/
class Graph{constructor({x:t,y:s,w:e,h:i,xBounds:h,yBounds:n}){this.pos=createVector(t,s),this.size=createVector(e,i),this.bounds=createVector(h,n),this.data={},this.colors={},this.length=0}static genColor(){let t=floor(random(0,3));return color(random(0==t?155:0,0==t?255:105),random(1==t?155:0,1==t?255:105),random(2==t?155:0,2==t?255:105))}toData(){return{data:this.data,colors:this.colors,length:this.length,bound:this.bounds.y}}fromData(t){let s=t;for(key in s.colors)this.colors[key]=color(...s.colors[key].levels);this.data=s.data,this.length=s.length,this.bounds.y=s.bound}addType(t,s=Graph.genColor()){this.data[t]=[],this.colors[t]=s}insert(t,s){this.addType(t),this.data[t]=new Array(this.length-1).fill(0),this.data[t].push(s);let e=0;for(t in this.data)e+=this.data[t][this.length-1];for(t in this.data)this.data[t][this.length-1]=this.data[t][this.length-1]/e*this.bounds.y}update(t){let s=0;for(key in t)s+=t[key];for(key in t)this.data[key].push(t[key]/s*this.bounds.y);this.length++}scale(t){return t/this.bounds.y*this.size.y}draw(){push(),stroke(200),line(this.pos.x,this.pos.y,this.pos.x,this.pos.y+this.size.y),line(this.pos.x,this.pos.y+this.size.y,this.pos.x+this.size.x,this.pos.y+this.size.y),noStroke(),fill(200),textSize(12),text(this.length-1,this.pos.x+this.size.x-12,this.pos.y+this.size.y-4),text(this.bounds.y,this.pos.x+4,this.pos.y);let t=Object.keys(this.data),s=new Array(this.length).fill(0);for(let e=0;e<t.length;e++){fill(this.colors[t[e]]),beginShape(),vertex(this.pos.x,this.pos.y+this.scale(s[0]));for(let t=1;t<this.length;t++)vertex(this.pos.x+t/(this.length-1)*this.size.x,this.pos.y+this.scale(s[t]));for(let i=this.length;i>0;i--)vertex(this.pos.x+i/(this.length-1)*this.size.x,this.pos.y+this.scale(s[i]+this.data[t[e]][i]));vertex(this.pos.x,this.pos.y+this.scale(s[0]+this.data[t[e]][0])),endShape(OPEN),noStroke(),fill(255),this.data[t[e]][this.length-1]>0&&(textAlign(LEFT),text(t[e],this.pos.x+this.size.x+12,this.pos.y+this.scale(s[this.length-1]+this.data[t[e]][this.length-1]/2)));for(let i=1;i<this.length;i++)s[i]+=this.data[t[e]][i];s[0]+=this.data[t[e]][0]}pop()}}const wnx=window.innerWidth,wny=window.innerHeight;let currentGen,currentIndex;function setup(){createCanvas(wnx,wny),graph=new Graph({x:10,y:100,w:wnx-200,h:wny-310,xBounds:100,yBounds:100}),fetch("http://192.168.1.201:3000/recieve",{method:"get",headers:{Accept:"application/json","Content-Type":"application/json"}}).then((t=>t.json())).then((t=>{console.log(t),graph.fromData(t.graph),currentIndex=t.meta.currentIndex,currentGen=t.meta.currentGen}))}function draw(){background(51),graph.draw(),void 0!==currentIndex&&(textSize(22),fill(255),text(`Current Gen: ${currentGen}`,30,30),text(`Current Creature: ${currentIndex}`,30,60))}